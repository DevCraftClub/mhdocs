name: Security Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    - cron: "0 4 * * 1"

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      - name: Run Bandit security check
        run: |
          echo "Running Bandit security check..."
          bandit -r . -f json -o bandit-report.json || true
          bandit -r . -f txt -o bandit-report.txt || true

          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          if [ -f bandit-report.txt ]; then
            echo "=== Bandit Security Report ==="
            cat bandit-report.txt
          fi

      - name: Check for known vulnerabilities
        run: |
          echo "Checking for known vulnerabilities..."
          safety check --json --output safety-report.json || true
          safety check --output safety-report.txt || true

          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          if [ -f safety-report.txt ]; then
            echo "=== Safety Vulnerability Report ==="
            cat safety-report.txt
          fi

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            bandit-report.txt
            safety-report.json
            safety-report.txt
          retention-days: 30

      - name: Comment PR with security findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            let comment = '## üîí Security Check Results\n\n';

            // Bandit results
            if (fs.existsSync('bandit-report.txt')) {
              const banditContent = fs.readFileSync('bandit-report.txt', 'utf8');
              if (banditContent.trim()) {
                comment += '### üö® Bandit Security Issues\n\n';
                comment += '```\n' + banditContent + '\n```\n\n';
              } else {
                comment += '‚úÖ No Bandit security issues found\n\n';
              }
            }

            // Safety results
            if (fs.existsSync('safety-report.txt')) {
              const safetyContent = fs.readFileSync('safety-report.txt', 'utf8');
              if (safetyContent.trim()) {
                comment += '### ‚ö†Ô∏è Known Vulnerabilities\n\n';
                comment += '```\n' + safetyContent + '\n```\n\n';
              } else {
                comment += '‚úÖ No known vulnerabilities found\n\n';
              }
            }

            comment += '---\n*This report was generated automatically by GitHub Actions*';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
