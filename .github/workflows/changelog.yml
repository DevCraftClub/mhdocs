name: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π

on:
  push:
    tags:
      - "v*"

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:
      - name: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        id: changelog
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commits } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: context.sha
            });

            let changelog = '# üìã –ñ—É—Ä–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏–π\n\n';
            changelog += `## –í–µ—Ä—Å–∏—è ${context.ref.replace('refs/tags/', '')}\n\n`;
            changelog += `**–î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞:** ${new Date().toISOString().split('T')[0]}\n\n`;

            const categories = {
              'feat': 'üöÄ –§—É–Ω–∫—Ü–∏–∏',
              'fix': 'üêõ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–≥–æ–≤',
              'docs': 'üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è',
              'style': 'üíÑ –°—Ç–∏–ª—å',
              'refactor': '‚ôªÔ∏è –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥',
              'test': 'üß™ –¢–µ—Å—Ç—ã',
              'chore': 'üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ',
              'ci': '‚öôÔ∏è CI/CD',
              'perf': '‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
              'build': 'üì¶ –°–±–æ—Ä–∫–∞',
              'revert': '‚è™ –û—Ç–∫–∞—Ç—ã'
            };

            const categorizedCommits = {};

            for (const commit of commits.commits) {
              const message = commit.commit.message;
              const lines = message.split('\n');
              const firstLine = lines[0];
              
              // –ü–∞—Ä—Å–∏–º conventional commits
              const match = firstLine.match(/^(\w+)(?:\(([^)]+)\))?:\s*(.+)$/);
              
              if (match) {
                const [, type, scope, description] = match;
                const category = categories[type] || 'üìù Other';
                
                if (!categorizedCommits[category]) {
                  categorizedCommits[category] = [];
                }
                
                const scopeText = scope ? `**${scope}:** ` : '';
                categorizedCommits[category].push(`- ${scopeText}${description}`);
              } else {
                // –ù–µ conventional commit
                if (!categorizedCommits['üìù Other']) {
                  categorizedCommits['üìù Other'] = [];
                }
                categorizedCommits['üìù Other'].push(`- ${firstLine}`);
              }
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ changelog
            for (const [category, commits] of Object.entries(categorizedCommits)) {
              if (commits.length > 0) {
                changelog += `### ${category}\n\n`;
                for (const commit of commits) {
                  changelog += `${commit}\n`;
                }
                changelog += '\n';
              }
            }

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            changelog += '## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n';
            changelog += `- **–í—Å–µ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤:** ${commits.commits.length}\n`;
            changelog += `- **–ò–∑–º–µ–Ω–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:** ${commits.files ? commits.files.length : 'N/A'}\n`;
            changelog += `- **–î–æ–±–∞–≤–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫:** ${commits.stats ? commits.stats.additions : 'N/A'}\n`;
            changelog += `- **–£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–æ–∫:** ${commits.stats ? commits.stats.deletions : 'N/A'}\n\n`;

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏
            changelog += '## üîó –°—Å—ã–ª–∫–∏\n\n';
            changelog += `- [–ü–æ–ª–Ω–∞—è —Ä–∞–∑–Ω–∏—Ü–∞](https://github.com/${context.repo.owner}/${context.repo.repo}/compare/main...${context.ref})\n`;
            changelog += `- [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://devcraftclub.github.io/mhdocs/)\n`;
            changelog += `- [Readme DevCraft](https://readme.devcraft.club)\n`;

            core.setOutput('changelog', changelog);
            console.log('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∂—É—Ä–Ω–∞–ª –∏–∑–º–µ–Ω–µ–Ω–∏–π:', changelog);

      - name: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        run: |
          echo "${{ steps.changelog.outputs.changelog }}" > CHANGELOG.md

      - name: –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "docs: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è ${{ github.ref_name }}" || echo "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
          git push

      - name: –ó–∞–≥—Ä—É–∑–∫–∞ –∂—É—Ä–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç
        uses: actions/upload-artifact@v4
        with:
          name: –∂—É—Ä–Ω–∞–ª-–∏–∑–º–µ–Ω–µ–Ω–∏–π-${{ github.ref_name }}
          path: CHANGELOG.md
          retention-days: 90
